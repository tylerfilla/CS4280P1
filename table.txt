#
# Tyler Filla
# CS 4280
# Project 1
#

#
# What is this file?
#
# I found the most frustrating part of hand-coding the table to be assigning numbers to states. Any mistake requires
# going back to fix many cells in the table, which seems error-prone. To solve this, I started planning out the table
# in this file. Eventually, I decided to write a program to convert this file into the table, itself, automatically,
# using an easier-to-code method.
#
# The main feature of this file is the ability to refer to states by name, rather than number. Each non-empty, non-
# comment line describes one state. The first field on the line contains a human-readable name for the state. The
# second field is a comma-separated list of transitions (in the form of "CHARACTER->TARGET"). The ground state is named
# "*" (asterisk, not a wildcard). CHARACTER is allowed to be "WS" for all whitespace, "LETTERS" for letters (uppercase
# and lowercase), or "DIGITS" for digits. If TARGET is in {braces}, that denotes an accepted token.
#
# The first non-empty, non-comment line names the EOF token, which is always assigned the numeric ID 0.
#

TK_EOF

*                   i->i,l->l,p->p,r->r,s->s,t->t,v->v,WS->*,OTHERLETTERS->IDENTIFIER,DIGITS->INTEGER,=->EQUAL,<->LESSTHAN,>->GREATERTHAN,:->COLON,+->PLUS,MINUS->MINUS,*->ASTERISK,/->SLASH,%->PERCENT,.->DOT,(->OPAREN,)->CPAREN,COMMA->COMMA,{->OBRACE,}->CBRACE,;->SEMICOLON,[->OBRACKET,]->CBRACKET,&->COMMENT
 i                  f->if,t->it,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  if                f->iff,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   iff              WS->{TK_KW_IFF},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  it                e->ite,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   ite              r->iter,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    iter            WS->{TK_KW_ITER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
 l                  e->le,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  le                t->let,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   let              WS->{TK_KW_LET},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
 p                  r->pr,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  pr                i->pri,o->pro,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   pri              n->prin,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    prin            t->print,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
     print          WS->{TK_KW_PRINT},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   pro              g->prog,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    prog            r->progr,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
     progr          a->progra,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
      progra        m->program,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
       program      WS->{TK_KW_PROGRAM},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
 r                  e->re,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  re                a->rea,t->ret,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   rea              d->read,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    read            WS->{TK_KW_READ},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   ret              u->retu,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    retu            r->retur,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
     retur          n->return,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
      return        WS->{TK_KW_RETURN},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
 s                  t->st,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  st                a->sta,o->sto,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   sta              r->star,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    star            t->start,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
     start          WS->{TK_KW_START},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   sto              p->stop,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    stop            WS->{TK_KW_STOP},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
 t                  h->th,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  th                e->the,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   the              n->then,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    then            WS->{TK_KW_THEN},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
 v                  a->va,o->vo,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  va                r->var,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   var              WS->{TK_KW_VAR},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
  vo                i->voi,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
   voi              d->void,WS->{TK_IDENTIFIER},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
    void            WS->{TK_KW_VOID},OTHERLETTERS->IDENTIFIER,DIGITS->IDENTIFIER
 IDENTIFIER         LETTERS->IDENTIFIER,DIGITS->IDENTIFIER,WS->{TK_IDENTIFIER},SYMBOLS->{TK_IDENTIFIER}
 EQUAL              OTHERS->{TK_OP_EQ}
 LESSTHAN           OTHERS->{TK_OP_LT}
 GREATERTHAN        OTHERS->{TK_OP_GT}
 COLON              OTHERS->{TK_OP_COLON}
 PLUS               OTHERS->{TK_OP_PLUS}
 MINUS              OTHERS->{TK_OP_MINUS}
 ASTERISK           OTHERS->{TK_OP_ASTERISK}
 SLASH              OTHERS->{TK_OP_SLASH}
 PERCENT            OTHERS->{TK_OP_PERCENT}
 DOT                OTHERS->{TK_OP_DOT}
 OPAREN             OTHERS->{TK_OP_OPAREN}
 CPAREN             OTHERS->{TK_OP_CPAREN}
 COMMA              OTHERS->{TK_OP_COMMA}
 OBRACE             OTHERS->{TK_OP_OBRACE}
 CBRACE             OTHERS->{TK_OP_CBRACE}
 SEMICOLON          OTHERS->{TK_OP_SEMICOLON}
 OBRACKET           OTHERS->{TK_OP_OBRACKET}
 CBRACKET           OTHERS->{TK_OP_CBRACKET}
 INTEGER            DIGITS->INTEGER,WS->{TK_INTEGER},SYMBOLS->{TK_INTEGER}
 COMMENT            &->*,OTHERS->COMMENT
